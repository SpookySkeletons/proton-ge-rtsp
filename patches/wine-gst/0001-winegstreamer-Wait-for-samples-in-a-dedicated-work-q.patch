From e2f4b27f9a6815a8677e83c3bed065f6cb769e90 Mon Sep 17 00:00:00 2001
From: Torge Matthies <openglfreak@googlemail.com>
Date: Wed, 31 Jan 2024 17:42:54 +0100
Subject: [PATCH 01/20] winegstreamer: Wait for samples in a dedicated work
 queue.

---
 dlls/winegstreamer/media_source.c     | 11 +++++++++--
 dlls/winegstreamer/new_media_source.c | 10 ++++++++--
 2 files changed, 17 insertions(+), 4 deletions(-)

diff --git a/dlls/winegstreamer/media_source.c b/dlls/winegstreamer/media_source.c
index 83ab880f8ef..9b6c930efda 100644
--- a/dlls/winegstreamer/media_source.c
+++ b/dlls/winegstreamer/media_source.c
@@ -182,6 +182,7 @@ struct media_source
     IMFAsyncCallback async_commands_callback;
     LONG ref;
     DWORD async_commands_queue;
+    DWORD async_request_sample_queue;
     IMFMediaEventQueue *event_queue;
     IMFByteStream *byte_stream;
 
@@ -571,7 +572,7 @@ static void flush_token_queue(struct media_stream *stream, BOOL send)
                 command->u.request_sample.stream = stream;
                 command->u.request_sample.token = stream->token_queue[i];
 
-                hr = MFPutWorkItem(source->async_commands_queue, &source->async_commands_callback, op);
+                hr = MFPutWorkItem(source->async_request_sample_queue, &source->async_commands_callback, op);
                 IUnknown_Release(op);
             }
             if (FAILED(hr))
@@ -1111,7 +1112,7 @@ static HRESULT WINAPI media_stream_RequestSample(IMFMediaStream *iface, IUnknown
             IUnknown_AddRef(token);
         command->u.request_sample.token = token;
 
-        hr = MFPutWorkItem(source->async_commands_queue, &source->async_commands_callback, op);
+        hr = MFPutWorkItem(source->async_request_sample_queue, &source->async_commands_callback, op);
         IUnknown_Release(op);
     }
 
@@ -1394,6 +1395,7 @@ static ULONG WINAPI media_source_Release(IMFMediaSource *iface)
     {
         IMFMediaSource_Shutdown(iface);
         MFUnlockWorkQueue(source->async_commands_queue);
+        MFUnlockWorkQueue(source->async_request_sample_queue);
         IMFMediaEventQueue_Release(source->event_queue);
         IMFByteStream_Release(source->byte_stream);
         wg_parser_destroy(source->wg_parser);
@@ -1634,6 +1636,7 @@ static HRESULT WINAPI media_source_Shutdown(IMFMediaSource *iface)
     LeaveCriticalSection(&source->cs);
 
     MFUnlockWorkQueue(source->async_commands_queue);
+    MFUnlockWorkQueue(source->async_request_sample_queue);
 
     return S_OK;
 }
@@ -1703,6 +1706,8 @@ static HRESULT media_source_create(struct object_context *context, IMFMediaSourc
 
     if (FAILED(hr = MFAllocateWorkQueue(&object->async_commands_queue)))
         goto fail;
+    if (FAILED(hr = MFAllocateWorkQueue(&object->async_request_sample_queue)))
+        goto fail;
 
     if (!(parser = wg_parser_create(context->type, FALSE, FALSE)))
     {
@@ -1805,6 +1810,8 @@ fail:
     }
     if (object->wg_parser)
         wg_parser_destroy(object->wg_parser);
+    if (object->async_request_sample_queue)
+        MFUnlockWorkQueue(object->async_request_sample_queue);
     if (object->async_commands_queue)
         MFUnlockWorkQueue(object->async_commands_queue);
     if (object->event_queue)
diff --git a/dlls/winegstreamer/new_media_source.c b/dlls/winegstreamer/new_media_source.c
index efaf6a3e087..3b471a67bc2 100644
--- a/dlls/winegstreamer/new_media_source.c
+++ b/dlls/winegstreamer/new_media_source.c
@@ -294,6 +294,7 @@ struct media_source
     IMFAsyncCallback async_commands_callback;
     LONG ref;
     DWORD async_commands_queue;
+    DWORD async_request_sample_queue;
     IMFMediaEventQueue *event_queue;
     IMFByteStream *byte_stream;
 
@@ -584,7 +585,7 @@ static void flush_token_queue(struct media_stream *stream, BOOL send)
                 command->u.request_sample.stream = stream;
                 command->u.request_sample.token = stream->token_queue[i];
 
-                hr = MFPutWorkItem(source->async_commands_queue, &source->async_commands_callback, op);
+                hr = MFPutWorkItem(source->async_request_sample_queue, &source->async_commands_callback, op);
                 IUnknown_Release(op);
             }
             if (FAILED(hr))
@@ -1031,7 +1032,7 @@ static HRESULT WINAPI media_stream_RequestSample(IMFMediaStream *iface, IUnknown
             IUnknown_AddRef(token);
         command->u.request_sample.token = token;
 
-        hr = MFPutWorkItem(source->async_commands_queue, &source->async_commands_callback, op);
+        hr = MFPutWorkItem(source->async_request_sample_queue, &source->async_commands_callback, op);
         IUnknown_Release(op);
     }
 
@@ -1525,6 +1526,7 @@ static HRESULT WINAPI media_source_Shutdown(IMFMediaSource *iface)
 
     LeaveCriticalSection(&source->cs);
 
+    MFUnlockWorkQueue(source->async_request_sample_queue);
     MFUnlockWorkQueue(source->async_commands_queue);
 
     return S_OK;
@@ -1681,6 +1683,8 @@ static HRESULT media_source_create(struct object_context *context, IMFMediaSourc
         goto fail;
     if (FAILED(hr = MFAllocateWorkQueue(&object->async_commands_queue)))
         goto fail;
+    if (FAILED(hr = MFAllocateWorkQueue(&object->async_request_sample_queue)))
+        goto fail;
     if (FAILED(hr = wg_source_get_duration(object->wg_source, &object->duration)))
         goto fail;
     object->state = SOURCE_OPENING;
@@ -1739,6 +1743,8 @@ fail:
 
     if (object->wg_source)
         wg_source_destroy(object->wg_source);
+    if (object->async_request_sample_queue)
+        MFUnlockWorkQueue(object->async_request_sample_queue);
     if (object->async_commands_queue)
         MFUnlockWorkQueue(object->async_commands_queue);
     if (object->event_queue)
-- 
2.44.0

